TC: O(N)
SC: O(N)

class Solution {
    bool isSymm(TreeNode* root1, TreeNode* root2) {
        if (root1 == NULL || root2 == NULL) return root1 == root2;  // Base case: both NULL → true
        return (root1->val == root2->val)  // Check values
            && isSymm(root1->left, root2->right)  // Mirror check: left ↔ right
            && isSymm(root1->right, root2->left);  // Mirror check: right ↔ left
    }
public:
    bool isSymmetric(TreeNode* root) {
        if (!root) return true;  // Edge case: empty tree is symmetric
        return isSymm(root->left, root->right);  // Check mirror symmetry
    }
};
